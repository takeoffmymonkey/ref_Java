package _operators_arithmetic;

/* Оператор деления по модулю (определяет остаток от деления левого операнда на правый)*/

public class Modulo {

    public static void main(String[] args) {
        /* БОЛЬШЕЕ НА МЕНЬШЕЕ */
        System.out.println(42 % 10); // даст 2: (4 * 10) = 40, 10 больше не влазит - остается 2


        /* МЕНЬШЕЕ НА БОЛЬШЕЕ
         * - получается то же значение*/
        System.out.println(3 % 4); // даст 3: 4 ни разу не влазит, остается все 3


        /* ОТРИЦАТЕЛЬНЫЕ
         * - отбросить минус
         * - обычное деление по модулю
         * - если первое число было с минусом, возвращаем его*/
        System.out.println(-9 % 4); // даст -1: отбросить минус, потом (9 % 4) даст 1, и вернем минус


        /* ОПРЕДЕЛЕНИЕ ЧЕТНОСТИ */
        System.out.println(6 % 2); // Остаток от деления 0 - четное
        System.out.println(7 % 2); // Остаток от деления 1 - нечетное


        /* РАЗБИВКА ЧИСЛА НА ЧАСТИ */
        System.out.println(2013 % 100); // остаток 13


        /* ПЕРЕВОД ИЗ МИНУТ В ЧАСЫ*/
        int hours = (135 / 60); // даст 2
        int minutes = (135 % 60); // даст 15 (всегда остается в диапазоне 0-59!)
        System.out.println("135 минут это: " + hours + " часа и " + minutes + " минут");


        /* ЯВНОЕ ПРИВЕДЕНИЕ ЦЕЛОЧИСЛЕННОГО (УСЕЧЕНИЕ)
         * - т.е. деления по модулю приводимого значения на диапазон целевого
         * - работает только если будущий целевой крайний правый бит это 0!
         * - (больше деталей в ручном приведении)*/
        byte b;
        short s = 300;
        b = (byte) s; // диапазон byte 256
        System.out.println("300 % 256 = " + 300 % 256); // даст 44
        System.out.println("300 при приведении в byte байт будет = " + b); // даст 44
    }
}
