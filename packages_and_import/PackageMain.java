/* ПАКЕТ - ПРОСТРАНСТВО ИМЕН, КОТОРОЕ ОГРАНИЗУЕТ НАБОР СВЯЗАННЫХ ТИПОВ
 * - т.е. одни и те же имена типов в разных пакетах не будут конфликтовать
 *      - если встретятся в 1 файле, то нужно будет указывать уточненное имя для каждого
 * - типы - это члены пакета:
 *      - классы
 *      - интерфейсы
 *      - аннотации
 *      - перечисления*/


/*СОЗДАНИЕ
 * - package + имяпакета ставится вверху каждого файла с исходным кодом, который содержит типы и
 * который должен принадлежать этому пакету
 * - файл может принадлежать только 1 пакету
 * - пакеты могут быть вложенными package пакет1.пакет2.пакет3
 *      - только логически связаны
 *      - !!! т.е. на самом деле не являются вложенными (см. мнимость иерарархии пакетов)
 * - типы без пакета относятся к дефолтному пакету unnamed
 *      - для удобства быстрой разработки
 *      - у такого пакета не может быть вложенных пакетов
 *      - рефлексия пакета даст null, а не unnamed*/


/*ИМЯ ПАКЕТА, КОТОРОМУ ПРИНАДЛЕЖИТ ФАЙЛ, ДОЛЖНО ИДТИ ПЕРВЫМ (НЕ СЧИТАЯ КОММЕНТАРИИ)
 * - пишутся с маленькой буквы, чтобы не путать с классами и интерфейсами
 * - обычно используется обратное доменное имя компании, с которого начинается имя пакета:
 *      com.galukhin.packages_and_import
 * - если имя домена не валидное в java - можно заменить/начать с нижнего подчеркивания:
 *      hyphenated-name.example.org -> org.example.hyphenated_name*/
package packages_and_import; // т.е. этот файл принадлежит к данному пакету
//package modifiers.access; // файл не может принадлежать двум пакетам одновременно


/*ПАКЕТ ПРЕДОСТАВЛЯЕТ КОНТРОЛЬ ДОСТУПА
 * дефолтный модификатор доступа - пакетный (т.е. доступ только в рамках пакета)*/


public class PackageMain {
    static int var;

    public static void main(String[] args) {
        /*КОНТРОЛЬ ДОСТУПА*/
        ImportMain importMain = new ImportMain(); // тот же пакет: есть доступ к классу без импорта
        var = importMain.var; // есть доступ к переменной с дефолтным уровнем доступа
//        InnerMain innerMain = new InnerMain(); // вложенный пакет (считается другим): требует импорт
    }
}
