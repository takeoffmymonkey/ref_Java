package algorithms_datastructures.algorithms.sort;

/* HeapSort
 * - ключевая идея: в Binary Heap максимальный элемент всегда сверху, поэтому его можно каждый раз
 * переносить в сортированный массив, давая "всплыть" вверх следующему максимальному элементу
 *
 * - алгоритм:
 *      - перевести массив в дерево
 *          - просто по порядку:
 *              - первый элемент - корневой узел
 *              - второй и третий - дочерние узлы
 *              - третий, четвертый, пятый, шестов - дочерние узлы предыдущих узлов
 *      - перевести дерево в Binary Heap
 *          - т.е. значение родительского узла > значения дочернего
 *              - т.е. максимальное значение всплывает в корневой узел
 *              - (т.е. это max-heap)
 *      - забрать максимальное значени в сортированный массив
 *          - вставить в конец
 *      - починить ("Heapify") Binary Heap, чтобы всплыл новый максимум
 *          - забрать его и вставить в сортированный массив перед предыдущим максимумом
 *      - и так до последнего элемента
 *
 * - сложность:
 *      - лучшая: O(n log(n))
 *      - средняя: O(n log(n))
 *      - худшая: O(n log(n)) */


public class HeapSort {
}
