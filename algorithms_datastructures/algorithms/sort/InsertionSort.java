package algorithms_datastructures.algorithms.sort;

/* InsertionSort
 * - ключевая идея: сравнивать новый элемент со всей сортированной группой и помещать его в
 * соответствующее место в данной группе
 *
 * - алгоритм:
 *      - берем первый элемент, помещаем его в сортированный массив
 *      - берем следующий элемент и сравниваем его с элементами в сортированном массиве, начиная с
 *      конца
 *          - если данный новый элемент меньше сравниваемого, то сравниваем его со следующим в
 *          сортированном массиве
 *          - если данный новый элемент больше сравниваемого, то помещаем его перед ним
 *
 * - для сокращения времени перемещения элементов рекомендовано использовать LinkedList
 *
 * - сложность:
 *      - лучшая: O(n)
 *      - средняя: O(n^2)
 *      - худшая: O(n^2) */


import java.util.Arrays;

public class InsertionSort {
    public static void main(String[] args) {
        int[] a = {1, 4, 6, 2, 10, 3};
        sort(a);
        System.out.println("InsertionSort" + Arrays.toString(a));
    }

    private static void sort(int[] a) {
        // участвует каждый элемент
        for (int i = 0; i < a.length; i++) {
            int current = a[i]; // текущий открываемый
            int j = i - 1; // позиция, куда
            while (j >= 0 && a[j] > current) { // сдвиг позиции
                a[j + 1] = a[j];
                j = j - 1;
            }
            a[j + 1] = current; // текущий помещается
        }
    }
}
