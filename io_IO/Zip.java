package io_IO;

/* СЖАТИЕ ДАННЫХ
 * - классы для сжатия базируются на существующих потоках IO и предоставляют функциональность сжатия
 *      - входят в иерархию IOStream
 *
 * - классы:
 *      - CheckedInputStream: метод getCheckSum() возвращает контрольную сумму для любого входного
 *      потока InputStream (не только для потока распаковки)
 *      - CheckedOutputStream: метод getCheckSum() возвращает контрольную сумму для любого выходного
 *      потока OutputStream (не только для потока распаковки)
 *      - DeflaterOutputStream: базовый класс для сжатия данных
 *          - ZipOutputStream: производит сжатие данных в формате ZIP
 *          - GZIPOutputStream: производит сжатие данных в формате GZIP
 *      - InflaterInputStream: базовый класс для классов распаковки сжатых данных
 *          - ZipIntputStream: распаковывает сжатые данные, хранящиеся в формате ZIP
 *          - GZIPIntputStream: распаковывает сжатые данные, хранящиеся в формате GZIP
 *
 * - просто надстраиваются на потоки IO
 *
 * - можно работать и с несколькими файлами в архиве
 *
 * - 2 алгоритма проверки контрольной суммы:
 *      - класс Adler32 - быстрый
 *      - класс CRC32 - медленный, но гораздо точнее
 * */

public class Zip {
}
