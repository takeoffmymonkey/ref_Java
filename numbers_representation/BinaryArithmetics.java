package numbers_representation;

/* АРИФМЕТИЧЕСКИЕ ПРАВИЛА ОДИНАКОВЫ ДЛЯ ВСЕХ СИСТЕМ */

/*  СЛОЖЕНИЕ, ВЫЧИТАНИЕ И УМНОЖЕНИЕ В ДВОЧНОЙ СИСТЕМЕ
    Сложение	Вычитание	Умножение
    ---------------------------------
    0 + 0 = 0	0 - 0 = 0	0 * 0 = 0
    ---------------------------------
    0 + 1 = 1	1 - 0 = 1	0 * 1 = 0
    ---------------------------------
    1 + 0 = 1	1 - 1 = 0	1 * 0 = 0
    ---------------------------------
    1 + 1 = 10	10 - 1 = 1	1 * 1 = 1 */


/* - Когда занимается единица старшего разряда, она дает две единицы младшего разряда.
 *
 * - Если занимается единица через несколько разрядов, то она дает единицы во всех промежуточных
 * нулевых разрядах и две единицы в младшем нулевом разряде.*/


/*ПРИМЕР СЛОЖЕНИЯ
 *   1011 +
 *   1010 =
 *   ----
 *  10101*/


/*ПРИМЕР ВЫЧИТАНИЯ
 *   10101 -
 *    1001 =
 *    ----
 *    1100
 *
 * - еще пример
 *   10000 - (это 0111 (единицы в нулевые разряды) и 11 (2 единицы в младший нулевой разряд))
 *(0111и11)
 *      11 =
 *    ----
 *    1101*/


/* ПРИМЕР УМНОЖЕНИЯ
 *   1101 *
 *    101 =
 *   ----
 *   1101 +
 *  0000  +
 * 1101   =
 *   ----
 *1000001*/


/* ПРИМЕР ДЕЛЕНИЯ
 * 110010 | 1010
 *-1010   | умножаем делитель на 1 (переходя в порядок делимого) и вычитаем из делимого. результат пока 1
 * ----
 * 0010   | убираем нули
 *   101  | сносим следующее число и смотрим не меньше ли полученное число делителя. здесь меньше, добавляем в результат 0, получается пока 10
 *   1010 | cносим следующее число, оно не меньше делителя, теперь результат 101
 * -1010  | умножаем делитель на 1 и вычитаем из делимого,
 * ----   |
 *     0  |остается 0, результат остается 101 */

public class BinaryArithmetics {
}
